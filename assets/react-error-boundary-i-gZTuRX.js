import{r as i}from"./index-Bu0lh5N2.js";const c=i.createContext(null),u={didCatch:!1,error:null};class h extends i.Component{constructor(r){super(r),this.resetErrorBoundary=this.resetErrorBoundary.bind(this),this.state=u}static getDerivedStateFromError(r){return{didCatch:!0,error:r}}resetErrorBoundary(){const{error:r}=this.state;if(r!==null){for(var e,t,n=arguments.length,a=new Array(n),s=0;s<n;s++)a[s]=arguments[s];(e=(t=this.props).onReset)===null||e===void 0||e.call(t,{args:a,reason:"imperative-api"}),this.setState(u)}}componentDidCatch(r,e){var t,n;(t=(n=this.props).onError)===null||t===void 0||t.call(n,r,e)}componentDidUpdate(r,e){const{didCatch:t}=this.state,{resetKeys:n}=this.props;if(t&&e.error!==null&&f(r.resetKeys,n)){var a,s;(a=(s=this.props).onReset)===null||a===void 0||a.call(s,{next:n,prev:r.resetKeys,reason:"keys"}),this.setState(u)}}render(){const{children:r,fallbackRender:e,FallbackComponent:t,fallback:n}=this.props,{didCatch:a,error:s}=this.state;let d=r;if(a){const l={error:s,resetErrorBoundary:this.resetErrorBoundary};if(typeof e=="function")d=e(l);else if(t)d=i.createElement(t,l);else if(n!==void 0)d=n;else throw s}return i.createElement(c.Provider,{value:{didCatch:a,error:s,resetErrorBoundary:this.resetErrorBoundary}},d)}}function f(){let o=arguments.length>0&&arguments[0]!==void 0?arguments[0]:[],r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:[];return o.length!==r.length||o.some((e,t)=>!Object.is(e,r[t]))}function E(o){if(o==null||typeof o.didCatch!="boolean"||typeof o.resetErrorBoundary!="function")throw new Error("ErrorBoundaryContext not found")}function m(){const o=i.useContext(c);E(o);const[r,e]=i.useState({error:null,hasError:!1}),t=i.useMemo(()=>({resetBoundary:()=>{o.resetErrorBoundary(),e({error:null,hasError:!1})},showBoundary:n=>e({error:n,hasError:!0})}),[o.resetErrorBoundary]);if(r.hasError)throw r.error;return t}function p(o,r){const e=i.forwardRef((n,a)=>i.createElement(h,r,i.createElement(o,{...n,ref:a}))),t=o.displayName||o.name||"Unknown";return e.displayName="withErrorBoundary(".concat(t,")"),e}export{h as ErrorBoundary,c as ErrorBoundaryContext,m as useErrorBoundary,p as withErrorBoundary};
